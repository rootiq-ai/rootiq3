# Alert Monitoring MVP - Environment Configuration
# Copy this file to .env and modify the values as needed

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# FastAPI server settings
HOST=0.0.0.0
PORT=8000
DEBUG=true

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database URL
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://alertuser:alertpass@localhost:5432/alertdb

# For Docker deployment, use:
# DATABASE_URL=postgresql://alertuser:alertpass@postgres:5432/alertdb

# =============================================================================
# CHROMADB CONFIGURATION
# =============================================================================

# ChromaDB storage path (relative to project root)
CHROMADB_PATH=./chromadb_data

# ChromaDB collection name for storing alert knowledge
CHROMADB_COLLECTION=alert_knowledge

# =============================================================================
# OLLAMA/LLM CONFIGURATION
# =============================================================================

# Ollama server host and port
OLLAMA_HOST=http://localhost:11434

# For Docker deployment, use:
# OLLAMA_HOST=http://ollama:11434

# Ollama model name (must be pulled first)
OLLAMA_MODEL=llama3

# Alternative models you can use:
# OLLAMA_MODEL=llama3:8b
# OLLAMA_MODEL=llama3:70b
# OLLAMA_MODEL=mistral
# OLLAMA_MODEL=codellama

# =============================================================================
# EMBEDDING MODEL CONFIGURATION
# =============================================================================

# Sentence transformer model for generating embeddings
# This model will be downloaded automatically on first run
EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2

# Alternative embedding models:
# EMBEDDING_MODEL=sentence-transformers/all-mpnet-base-v2
# EMBEDDING_MODEL=sentence-transformers/distilbert-base-nli-stsb-mean-tokens

# =============================================================================
# RAG AND RCA CONFIGURATION
# =============================================================================

# Maximum context length for LLM prompts (in characters)
MAX_CONTEXT_LENGTH=4000

# Similarity threshold for RAG search (0.0 to 1.0)
# Higher values = more strict similarity matching
SIMILARITY_THRESHOLD=0.7

# Number of similar incidents to retrieve for RCA
TOP_K_SIMILAR=5

# =============================================================================
# ALERT GROUPING CONFIGURATION
# =============================================================================

# Time window for grouping alerts (in seconds)
# Alerts within this window can be grouped together
GROUPING_TIME_WINDOW=300

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Enable detailed SQL logging
SQL_ECHO=false

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Secret key for sessions (generate a random string for production)
SECRET_KEY=your-secret-key-here

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:8501,http://127.0.0.1:8501

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Database connection pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# HTTP client timeout settings (in seconds)
HTTP_TIMEOUT=30
OLLAMA_TIMEOUT=120

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable auto-reload for development
RELOAD=true

# Enable API documentation
ENABLE_DOCS=true

# Sample data generation
GENERATE_SAMPLE_DATA=false

# =============================================================================
# DOCKER-SPECIFIC SETTINGS
# =============================================================================

# These settings are used when running with Docker Compose

# Internal service URLs (for container-to-container communication)
INTERNAL_DATABASE_URL=postgresql://alertuser:alertpass@postgres:5432/alertdb
INTERNAL_OLLAMA_HOST=http://ollama:11434

# External service URLs (for host access)
EXTERNAL_API_URL=http://localhost:8000
EXTERNAL_FRONTEND_URL=http://localhost:8501

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Custom prompt templates (optional)
# RCA_PROMPT_TEMPLATE=custom_rca_prompt.txt
# ANALYSIS_PROMPT_TEMPLATE=custom_analysis_prompt.txt

# Model parameters for Ollama
OLLAMA_TEMPERATURE=0.7
OLLAMA_TOP_P=0.9
OLLAMA_TOP_K=40

# ChromaDB advanced settings
CHROMADB_ANONYMIZED_TELEMETRY=false
CHROMADB_ALLOW_RESET=true

# Batch processing settings
BATCH_SIZE=100
MAX_CONCURRENT_REQUESTS=10

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable features
ENABLE_RAG=true
ENABLE_AUTO_GROUPING=true
ENABLE_BACKGROUND_TASKS=true
ENABLE_METRICS=true

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# Webhook URLs for external notifications (optional)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
# TEAMS_WEBHOOK_URL=https://outlook.office.com/webhook/YOUR/TEAMS/WEBHOOK

# Email settings (optional)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# =============================================================================
# BACKUP AND STORAGE
# =============================================================================

# Backup settings
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# File storage settings
UPLOAD_MAX_SIZE=10485760  # 10MB in bytes
ALLOWED_EXTENSIONS=csv,json,txt

# =============================================================================
# NOTES
# =============================================================================

# 1. Copy this file to .env in the project root directory
# 2. Modify the values according to your environment
# 3. Never commit the .env file to version control
# 4. Use strong passwords and secrets in production
# 5. Ensure all required services are running before starting the application

# For Docker deployment:
# - Use internal service names (postgres, ollama) for DATABASE_URL and OLLAMA_HOST
# - Make sure to pull the Ollama model: docker exec -it ollama ollama pull llama3
# - Adjust memory limits for resource-constrained environments

# For production deployment:
# - Set DEBUG=false
# - Use strong SECRET_KEY
# - Set up proper logging and monitoring
# - Configure SSL/TLS
# - Set up regular backups
